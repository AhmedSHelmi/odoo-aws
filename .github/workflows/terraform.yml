name: Terraform Workflow

on:
  push:
    branches:
      - develop  
      - main

jobs:
  terraform:
    name: Terraform CI/CD
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 3: Navigate to Terraform directory
      - name: Navigate to Terraform directory
        working-directory: terraform
        run: pwd

      # Step 4: Initialize Terraform
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # Step 5: Validate Terraform Configuration
      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      # Step 6: Plan Terraform Deployment
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file="${{ github.ref == 'refs/heads/main' && 'prod.tfvars' || 'dev.tfvars' }}"

      # Step 7: Apply Terraform Deployment for Development
      - name: Terraform Apply (Dev)
        if: github.ref == 'refs/heads/develop'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=dev.tfvars
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 8: Apply Terraform Deployment for Production
      - name: Terraform Apply (Prod - Manual Approval)
        if: github.ref == 'refs/heads/main'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=prod.tfvars
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
